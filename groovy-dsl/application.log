DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Version select: select version from Conference where id =?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Snapshot select: select conference_.id, conference_.description as descript2_0_, conference_.ended_date as ended_da3_0_, conference_.name as name4_0_, conference_.slug as slug5_0_, conference_.started_date as started_6_0_, conference_.version as version7_0_ from Conference conference_ where conference_.id=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Insert 0: insert into Conference (description, ended_date, name, slug, started_date, version, id) values (?, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Update 0: update Conference set description=?, ended_date=?, name=?, slug=?, started_date=?, version=? where id=? and version=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Delete 0: delete from Conference where id=? and version=?
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister -  Identity insert: insert into Conference (id, description, ended_date, name, slug, started_date, version) values (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@335bf90b]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [NONE]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d151931]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [READ]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ab770c]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [UPGRADE]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fa4049d]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [UPGRADE_NOWAIT]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655bc55e]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [UPGRADE_SKIPLOCKED]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@107824f9]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [FORCE]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33cbcd7b]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [PESSIMISTIC_READ]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0c790f]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [PESSIMISTIC_WRITE]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4aca1666]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [PESSIMISTIC_FORCE_INCREMENT]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@546ca120]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [OPTIMISTIC]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@529fcfc1]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [OPTIMISTIC_FORCE_INCREMENT]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.hantsylabs.example.spring.model.Conference: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.hantsylabs.example.spring.model.Conference: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@165ed711
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: 89602dff-eb93-4ba5-a547-25f252879b9e (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
INFO main org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Import file not found: /import.sql
DEBUG main org.hibernate.SQL - 
    drop table Conference if exists
DEBUG main org.hibernate.SQL - 
    create table Conference (
        id bigint generated by default as identity,
        description varchar(255) not null,
        ended_date timestamp not null,
        name varchar(255) not null,
        slug varchar(255) not null,
        started_date timestamp not null,
        version integer,
        primary key (id)
    )
INFO main org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator - No actions specified; doing nothing
DEBUG main org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@399b2815
DEBUG main org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Registering EntityManagerFactory: persistenceUnit 
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3a06520: defining beans [dataSource,entityManagerFactory,transactionManager,conferenceDao,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conferenceDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'conferenceDao'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.hantsylabs.example.spring.jpa.JpaConferenceDaoImpl]: PersistenceElement for private javax.persistence.EntityManager com.hantsylabs.example.spring.jpa.JpaConferenceDaoImpl.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'conferenceDao' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'conferenceDao': PersistenceElement for private javax.persistence.EntityManager com.hantsylabs.example.spring.jpa.JpaConferenceDaoImpl.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'conferenceDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
DEBUG main org.springframework.context.support.GenericApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@1da7e1ca]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest': PersistenceElement for javax.persistence.EntityManager com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest': AutowiredFieldElement for com.hantsylabs.example.spring.dao.ConferenceDao com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest.conferenceDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'conferenceDao'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest' to bean named 'conferenceDao'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'retrieveConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@4a1fcb1a, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration attributes [{defaultRollback=true, transactionManager=transactionManager}] for test class [class com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@21d5754 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest].
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [retrieveConference]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@250b7b3c] for JPA transaction
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.jpa.internal.EntityManagerImpl@250b7b3c] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@dd85e80] does not support JDBC Connection retrieval
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@4a1fcb1a, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Began transaction (1): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@eec2e6e]; rollback [true]
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================before test=====================
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Tue Jan 14 23:38:34 CST 2014,endedDate=Tue Jan 21 23:38:34 CST 2014,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 1
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=1, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - id @=1
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from com.hantsylabs.example.spring.model.Conference where slug=:slug
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  |  \-[IDENT] Node: 'hantsylabs'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'spring'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Conference'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'slug'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'slug'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.hantsylabs.example.spring.model.Conference (<no alias>) -> conference0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : slug -> org.hibernate.type.StringType@1905d7cc
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.slug -> conference0_.slug
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} Conference conference0_ ) ( where ( = ( conference0_.slug {synthetic-alias} slug ) ? ) ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [Conference conference0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Conference)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'conference0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.spring.model.Conference}}}
    |  \-[SQL_TOKEN] SqlFragment: 'conference0_.description as descript2_0_, conference0_.ended_date as ended_da3_0_, conference0_.name as name4_0_, conference0_.slug as slug5_0_, conference0_.started_date as started_6_0_, conference0_.version as version7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[conference0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Conference conference0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.spring.model.Conference}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'conference0_.slug' {propertyName=slug,dereferenceType=PRIMITIVE,getPropertyPath=slug,path={synthetic-alias}.slug,tableAlias=conference0_,className=com.hantsylabs.example.spring.model.Conference,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'slug' {originalText=slug}
          \-[NAMED_PARAM] ParameterNode: '?' {name=slug, expectedType=org.hibernate.type.StringType@1905d7cc}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from com.hantsylabs.example.spring.model.Conference where slug=:slug
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select conference0_.id as id1_0_, conference0_.description as descript2_0_, conference0_.ended_date as ended_da3_0_, conference0_.name as name4_0_, conference0_.slug as slug5_0_, conference0_.started_date as started_6_0_, conference0_.version as version7_0_ from Conference conference0_ where conference0_.slug=?
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=1, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended_da3_0_,
        conference0_.name as name4_0_,
        conference0_.slug as slug5_0_,
        conference0_.started_date as started_6_0_,
        conference0_.version as version7_0_ 
    from
        Conference conference0_ 
    where
        conference0_.slug=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.spring.model.Conference#1]
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=1, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended_da3_0_,
        conference0_.name as name4_0_,
        conference0_.slug as slug5_0_,
        conference0_.started_date as started_6_0_,
        conference0_.version as version7_0_ 
    from
        Conference conference0_ 
    where
        conference0_.slug=?
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================after test=====================
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from com.hantsylabs.example.spring.model.Conference
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'com'
                |  |  |  |  \-[IDENT] Node: 'hantsylabs'
                |  |  |  \-[IDENT] Node: 'example'
                |  |  \-[IDENT] Node: 'spring'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Conference'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.hantsylabs.example.spring.model.Conference (<no alias>) -> conference0_
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} Conference conference0_ ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [Conference conference0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Conference)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'conference0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.spring.model.Conference}}}
    |  \-[SQL_TOKEN] SqlFragment: 'conference0_.description as descript2_0_, conference0_.ended_date as ended_da3_0_, conference0_.name as name4_0_, conference0_.slug as slug5_0_, conference0_.started_date as started_6_0_, conference0_.version as version7_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[conference0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Conference conference0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.spring.model.Conference}}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from com.hantsylabs.example.spring.model.Conference
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select conference0_.id as id1_0_, conference0_.description as descript2_0_, conference0_.ended_date as ended_da3_0_, conference0_.name as name4_0_, conference0_.slug as slug5_0_, conference0_.started_date as started_6_0_, conference0_.version as version7_0_ from Conference conference0_
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=1, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended_da3_0_,
        conference0_.name as name4_0_,
        conference0_.slug as slug5_0_,
        conference0_.started_date as started_6_0_,
        conference0_.version as version7_0_ 
    from
        Conference conference0_
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.spring.model.Conference#1]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@4a1fcb1a, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@250b7b3c]
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - rolling back
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - rolled JDBC Connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@250b7b3c] after transaction
DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Rolled back transaction after test execution for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@4a1fcb1a, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@4a1fcb1a, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@6683aa33, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest': PersistenceElement for javax.persistence.EntityManager com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest': AutowiredFieldElement for com.hantsylabs.example.spring.dao.ConferenceDao com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest.conferenceDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'conferenceDao'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'updateConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@6683aa33, testMethod = updateConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [updateConference]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1b2ed9] for JPA transaction
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.jpa.internal.EntityManagerImpl@4e1b2ed9] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@dd85e80] does not support JDBC Connection retrieval
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@6683aa33, testMethod = updateConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Began transaction (2): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@eec2e6e]; rollback [true]
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================before test=====================
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Tue Jan 14 23:38:34 CST 2014,endedDate=Tue Jan 21 23:38:34 CST 2014,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 2
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=2, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - id @=2
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 1 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=2, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013Boston, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    update
        Conference 
    set
        description=?,
        ended_date=?,
        name=?,
        slug=?,
        started_date=?,
        version=? 
    where
        id=? 
        and version=?
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================after test=====================
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=2, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013Boston, slug=jud-2013, version=1}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended_da3_0_,
        conference0_.name as name4_0_,
        conference0_.slug as slug5_0_,
        conference0_.started_date as started_6_0_,
        conference0_.version as version7_0_ 
    from
        Conference conference0_
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.spring.model.Conference#2]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@6683aa33, testMethod = updateConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1b2ed9]
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - rolling back
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - rolled JDBC Connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@4e1b2ed9] after transaction
DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Rolled back transaction after test execution for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@6683aa33, testMethod = updateConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@6683aa33, testMethod = updateConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@b1aacdb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest': PersistenceElement for javax.persistence.EntityManager com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest': AutowiredFieldElement for com.hantsylabs.example.spring.dao.ConferenceDao com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest.conferenceDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'conferenceDao'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'deleteConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@b1aacdb, testMethod = deleteConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [deleteConference]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44a638f] for JPA transaction
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.jpa.internal.EntityManagerImpl@44a638f] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@dd85e80] does not support JDBC Connection retrieval
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@b1aacdb, testMethod = deleteConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Began transaction (3): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@eec2e6e]; rollback [true]
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================before test=====================
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Tue Jan 14 23:38:34 CST 2014,endedDate=Tue Jan 21 23:38:34 CST 2014,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 3
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=3, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - id @=3
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 1 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=3, endedDate=Tue Jan 21 23:38:34 CST 2014, startedDate=Tue Jan 14 23:38:34 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    delete 
    from
        Conference 
    where
        id=? 
        and version=?
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_0_,
        conference0_.description as descript2_0_0_,
        conference0_.ended_date as ended_da3_0_0_,
        conference0_.name as name4_0_0_,
        conference0_.slug as slug5_0_0_,
        conference0_.started_date as started_6_0_0_,
        conference0_.version as version7_0_0_ 
    from
        Conference conference0_ 
    where
        conference0_.id=?
DEBUG main org.hibernate.loader.entity.plan.AbstractLoadPlanBasedEntityLoader - Done entity load : com.hantsylabs.example.spring.model.Conference#3
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - conference@null
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================after test=====================
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended_da3_0_,
        conference0_.name as name4_0_,
        conference0_.slug as slug5_0_,
        conference0_.started_date as started_6_0_,
        conference0_.version as version7_0_ 
    from
        Conference conference0_
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@b1aacdb, testMethod = deleteConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44a638f]
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - rolling back
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - rolled JDBC Connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@44a638f] after transaction
DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Rolled back transaction after test execution for test context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@b1aacdb, testMethod = deleteConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@b1aacdb, testMethod = deleteConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================after class======================
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]], dirtiesContext [false].
INFO Thread-3 org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@e6da0da: startup date [Sun Dec 15 23:38:29 CST 2013]; root of context hierarchy
DEBUG Thread-3 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG Thread-3 org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3a06520: defining beans [dataSource,entityManagerFactory,transactionManager,conferenceDao,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
DEBUG Thread-3 org.springframework.beans.factory.support.DefaultListableBeanFactory - Retrieved dependent beans for bean 'conferenceDao': [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG Thread-3 org.springframework.beans.factory.support.DisposableBeanAdapter - Invoking destroy() on bean with name 'entityManagerFactory'
INFO Thread-3 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'persistenceUnit'
DEBUG Thread-3 org.hibernate.internal.SessionFactoryImpl - HHH000031: Closing
DEBUG Thread-3 org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Remove: name=persistenceUnit
