DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [PESSIMISTIC_READ]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ccdd340]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [PESSIMISTIC_WRITE]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@48cf87aa]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [PESSIMISTIC_FORCE_INCREMENT]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=? for update
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21cb087d]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [OPTIMISTIC]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl - Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cff3fbe]
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : description
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : endedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : name
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : slug
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : startedDate
DEBUG main org.hibernate.persister.walking.spi.MetamodelGraphWalker - Visiting attribute path : version
DEBUG main org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy - Building LoadPlan...
DEBUG main org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor - processing queryspace <gen:0>
DEBUG main org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter - LoadPlan(entity=com.hantsylabs.example.spring.model.Conference)
    - Returns
       - EntityReturnImpl(entity=com.hantsylabs.example.spring.model.Conference, querySpaceUid=<gen:0>, path=com.hantsylabs.example.spring.model.Conference)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.hantsylabs.example.spring.model.Conference)
          - SQL table alias mapping - conference0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

DEBUG main org.hibernate.loader.entity.plan.EntityLoader - Static select for entity com.hantsylabs.example.spring.model.Conference [OPTIMISTIC_FORCE_INCREMENT]: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_MERGE on entity com.hantsylabs.example.spring.model.Conference: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.loader.Loader - Static select for action ACTION_REFRESH on entity com.hantsylabs.example.spring.model.Conference: select conference0_.id as id1_0_0_, conference0_.description as descript2_0_0_, conference0_.ended_date as ended_da3_0_0_, conference0_.name as name4_0_0_, conference0_.slug as slug5_0_0_, conference0_.started_date as started_6_0_0_, conference0_.version as version7_0_0_ from Conference conference0_ where conference0_.id=?
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@84ff42c
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Registering SessionFactory: d19acf6b-12b5-4cf1-b749-b75c655ab0d2 (<unnamed>)
DEBUG main org.hibernate.internal.SessionFactoryRegistry - Not binding SessionFactory to JNDI, no JNDI name configured
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiated session factory
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
INFO main org.hibernate.tool.hbm2ddl.SchemaExport - HHH000227: Running hbm2ddl schema export
DEBUG main org.hibernate.tool.hbm2ddl.SchemaExport - Import file not found: /import.sql
DEBUG main org.hibernate.SQL - 
    drop table Conference if exists
DEBUG main org.hibernate.SQL - 
    create table Conference (
        id bigint generated by default as identity,
        description varchar(255) not null,
        ended_date timestamp not null,
        name varchar(255) not null,
        slug varchar(255) not null,
        started_date timestamp not null,
        version integer,
        primary key (id)
    )
INFO main org.hibernate.tool.hbm2ddl.SchemaExport - HHH000230: Schema export complete
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named HQL queries
DEBUG main org.hibernate.internal.NamedQueryRepository - Checking 0 named SQL queries
DEBUG main org.hibernate.stat.internal.StatisticsInitiator - Statistics initialized [enabled=false]
DEBUG main org.hibernate.jpa.internal.schemagen.JpaSchemaGenerator - No actions specified; doing nothing
DEBUG main org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Initializing EntityManagerFactoryRegistry : org.hibernate.jpa.internal.EntityManagerFactoryRegistry@448d0b
DEBUG main org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Registering EntityManagerFactory: persistenceUnit 
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@9574cdc: defining beans [dataSource,entityManagerFactory,transactionManager,conferenceDao,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'transactionManager' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'transactionManager'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'conferenceDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'conferenceDao'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Registered injected element on class [com.hantsylabs.example.spring.jpa.JpaConferenceDaoImpl]: PersistenceElement for private javax.persistence.EntityManager com.hantsylabs.example.spring.jpa.JpaConferenceDaoImpl.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'conferenceDao' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'conferenceDao': PersistenceElement for private javax.persistence.EntityManager com.hantsylabs.example.spring.jpa.JpaConferenceDaoImpl.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'conferenceDao'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
DEBUG main org.springframework.context.support.GenericApplicationContext - Unable to locate LifecycleProcessor with name 'lifecycleProcessor': using default [org.springframework.context.support.DefaultLifecycleProcessor@6854ee60]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemProperties]
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Searching for key 'spring.liveBeansView.mbeanDomain' in [systemEnvironment]
DEBUG main org.springframework.core.env.PropertySourcesPropertyResolver - Could not find key 'spring.liveBeansView.mbeanDomain' in any property source. Returning [null]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Storing ApplicationContext in cache under key [[MergedContextConfiguration@2063a0e5 testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest': PersistenceElement for javax.persistence.EntityManager com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest.entityManager
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.annotation.InjectionMetadata - Processing injected method of bean 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest': AutowiredFieldElement for com.hantsylabs.example.spring.dao.ConferenceDao com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest.conferenceDao
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'conferenceDao'
DEBUG main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - Autowiring by type from bean name 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest' to bean named 'conferenceDao'
DEBUG main org.springframework.transaction.annotation.AnnotationTransactionAttributeSource - Adding transactional method 'retrieveConference' with attribute: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Explicit transaction definition [PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''] found for test context [DefaultTestContext@5b390546 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@7c896573, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2063a0e5 testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GroovyContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.CacheAwareContextLoaderDelegate - Retrieved ApplicationContext from cache with key [[MergedContextConfiguration@2063a0e5 testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved @TransactionConfiguration attributes [{defaultRollback=true, transactionManager=transactionManager}] for test class [class com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest].
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Retrieved TransactionConfigurationAttributes [TransactionConfigurationAttributes@51cdaaa9 transactionManagerName = 'transactionManager', defaultRollback = true] for class [class com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest].
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'transactionManager'
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Creating new transaction with name [retrieveConference]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT; ''
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Opened new EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7f30ab6] for JPA transaction
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - begin
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtaining JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Obtained JDBC connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - initial autocommit status: true
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - disabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Not exposing JPA transaction [org.hibernate.jpa.internal.EntityManagerImpl@7f30ab6] as JDBC transaction because JpaDialect [org.springframework.orm.jpa.DefaultJpaDialect@17a65e83] does not support JDBC Connection retrieval
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5b390546 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@7c896573, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2063a0e5 testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GroovyContextLoader', parent = [null]]].
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Began transaction (1): transaction manager [org.springframework.orm.jpa.JpaTransactionManager@29a7082d]; rollback [true]
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================before test=====================
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Tue Jan 14 23:37:15 CST 2014,endedDate=Tue Jan 21 23:37:15 CST 2014,slug=jud-2013]
DEBUG main org.hibernate.engine.spi.ActionQueue - Executing identity-insert immediately
DEBUG main org.hibernate.SQL - 
    insert 
    into
        Conference
        (id, description, ended_date, name, slug, started_date, version) 
    values
        (null, ?, ?, ?, ?, ?, ?)
DEBUG main org.hibernate.id.IdentifierGeneratorHelper - Natively generated identity: 1
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=1, endedDate=Tue Jan 21 23:37:15 CST 2014, startedDate=Tue Jan 14 23:37:15 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - id @=1
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from com.hantsylabs.example.spring.model.Conference where slug=:slug
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    +-[SELECT_FROM] Node: 'SELECT_FROM'
    |  \-[FROM] Node: 'from'
    |     \-[RANGE] Node: 'RANGE'
    |        \-[DOT] Node: '.'
    |           +-[DOT] Node: '.'
    |           |  +-[DOT] Node: '.'
    |           |  |  +-[DOT] Node: '.'
    |           |  |  |  +-[DOT] Node: '.'
    |           |  |  |  |  +-[IDENT] Node: 'com'
    |           |  |  |  |  \-[IDENT] Node: 'hantsylabs'
    |           |  |  |  \-[IDENT] Node: 'example'
    |           |  |  \-[IDENT] Node: 'spring'
    |           |  \-[IDENT] Node: 'model'
    |           \-[IDENT] Node: 'Conference'
    \-[WHERE] Node: 'where'
       \-[EQ] Node: '='
          +-[IDENT] Node: 'slug'
          \-[COLON] Node: ':'
             \-[IDENT] Node: 'slug'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.hantsylabs.example.spring.model.Conference (<no alias>) -> conference0_
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias} -> {synthetic-alias}
DEBUG main org.hibernate.hql.internal.ast.tree.DotNode - getDataType() : slug -> org.hibernate.type.StringType@6e56ec40
DEBUG main org.hibernate.hql.internal.ast.tree.FromReferenceNode - Resolved : {synthetic-alias}.slug -> conference0_.slug
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} Conference conference0_ ) ( where ( = ( conference0_.slug {synthetic-alias} slug ) ? ) ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [Conference conference0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Conference)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'conference0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.spring.model.Conference}}}
    |  \-[SQL_TOKEN] SqlFragment: 'conference0_.description as descript2_0_, conference0_.ended_date as ended_da3_0_, conference0_.name as name4_0_, conference0_.slug as slug5_0_, conference0_.started_date as started_6_0_, conference0_.version as version7_0_'
    +-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[conference0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
    |  \-[FROM_FRAGMENT] FromElement: 'Conference conference0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.spring.model.Conference}}
    \-[WHERE] SqlNode: 'where'
       \-[EQ] BinaryLogicOperatorNode: '='
          +-[DOT] DotNode: 'conference0_.slug' {propertyName=slug,dereferenceType=PRIMITIVE,getPropertyPath=slug,path={synthetic-alias}.slug,tableAlias=conference0_,className=com.hantsylabs.example.spring.model.Conference,classAlias=null}
          |  +-[IDENT] IdentNode: '{synthetic-alias}' {originalText={synthetic-alias}}
          |  \-[IDENT] IdentNode: 'slug' {originalText=slug}
          \-[NAMED_PARAM] ParameterNode: '?' {name=slug, expectedType=org.hibernate.type.StringType@6e56ec40}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from com.hantsylabs.example.spring.model.Conference where slug=:slug
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select conference0_.id as id1_0_, conference0_.description as descript2_0_, conference0_.ended_date as ended_da3_0_, conference0_.name as name4_0_, conference0_.slug as slug5_0_, conference0_.started_date as started_6_0_, conference0_.version as version7_0_ from Conference conference0_ where conference0_.slug=?
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=1, endedDate=Tue Jan 21 23:37:15 CST 2014, startedDate=Tue Jan 14 23:37:15 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended_da3_0_,
        conference0_.name as name4_0_,
        conference0_.slug as slug5_0_,
        conference0_.started_date as started_6_0_,
        conference0_.version as version7_0_ 
    from
        Conference conference0_ 
    where
        conference0_.slug=?
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.spring.model.Conference#1]
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=1, endedDate=Tue Jan 21 23:37:15 CST 2014, startedDate=Tue Jan 14 23:37:15 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended_da3_0_,
        conference0_.name as name4_0_,
        conference0_.slug as slug5_0_,
        conference0_.started_date as started_6_0_,
        conference0_.version as version7_0_ 
    from
        Conference conference0_ 
    where
        conference0_.slug=?
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================after test=====================
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - parse() - HQL: from com.hantsylabs.example.spring.model.Conference
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       \-[FROM] Node: 'from'
          \-[RANGE] Node: 'RANGE'
             \-[DOT] Node: '.'
                +-[DOT] Node: '.'
                |  +-[DOT] Node: '.'
                |  |  +-[DOT] Node: '.'
                |  |  |  +-[DOT] Node: '.'
                |  |  |  |  +-[IDENT] Node: 'com'
                |  |  |  |  \-[IDENT] Node: 'hantsylabs'
                |  |  |  \-[IDENT] Node: 'example'
                |  |  \-[IDENT] Node: 'spring'
                |  \-[IDENT] Node: 'model'
                \-[IDENT] Node: 'Conference'

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select << begin [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.tree.FromElement - FromClause{level=1} : com.hantsylabs.example.spring.model.Conference (<no alias>) -> conference0_
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select : finishing up [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - processQuery() :  ( SELECT ( FromClause{level=1} Conference conference0_ ) )
DEBUG main org.hibernate.hql.internal.ast.HqlSqlWalker - Derived SELECT clause created.
DEBUG main org.hibernate.hql.internal.ast.util.JoinProcessor - Using FROM fragment [Conference conference0_]
DEBUG main org.hibernate.hql.internal.antlr.HqlSqlBaseWalker - select >> end [level=1, statement=select]
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (Conference)
    +-[SELECT_CLAUSE] SelectClause: '{derived select clause}'
    |  +-[SELECT_EXPR] SelectExpressionImpl: 'conference0_.id as id1_0_' {FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.spring.model.Conference}}}
    |  \-[SQL_TOKEN] SqlFragment: 'conference0_.description as descript2_0_, conference0_.ended_date as ended_da3_0_, conference0_.name as name4_0_, conference0_.slug as slug5_0_, conference0_.started_date as started_6_0_, conference0_.version as version7_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[], fromElementByTableAlias=[conference0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'Conference conference0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=null,role=null,tableName=Conference,tableAlias=conference0_,origin=null,columns={,className=com.hantsylabs.example.spring.model.Conference}}

DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - HQL: from com.hantsylabs.example.spring.model.Conference
DEBUG main org.hibernate.hql.internal.ast.QueryTranslatorImpl - SQL: select conference0_.id as id1_0_, conference0_.description as descript2_0_, conference0_.ended_date as ended_da3_0_, conference0_.name as name4_0_, conference0_.slug as slug5_0_, conference0_.started_date as started_6_0_, conference0_.version as version7_0_ from Conference conference0_
DEBUG main org.hibernate.hql.internal.ast.ErrorCounter - throwQueryException() : no errors
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Processing flush-time cascades
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Dirty checking collections
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
DEBUG main org.hibernate.event.internal.AbstractFlushingEventListener - Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
DEBUG main org.hibernate.internal.util.EntityPrinter - Listing entities:
DEBUG main org.hibernate.internal.util.EntityPrinter - com.hantsylabs.example.spring.model.Conference{id=1, endedDate=Tue Jan 21 23:37:15 CST 2014, startedDate=Tue Jan 14 23:37:15 CST 2014, description=JBoss User Developer Conference 2013 Boston, name=JUD2013, slug=jud-2013, version=0}
DEBUG main org.hibernate.SQL - 
    select
        conference0_.id as id1_0_,
        conference0_.description as descript2_0_,
        conference0_.ended_date as ended_da3_0_,
        conference0_.name as name4_0_,
        conference0_.slug as slug5_0_,
        conference0_.started_date as started_6_0_,
        conference0_.version as version7_0_ 
    from
        Conference conference0_
DEBUG main org.hibernate.loader.Loader - Result set row: 0
DEBUG main org.hibernate.loader.Loader - Result row: EntityKey[com.hantsylabs.example.spring.model.Conference#1]
DEBUG main org.springframework.test.context.transaction.TransactionalTestExecutionListener - No method-level @Rollback override: using default rollback [true] for test context [DefaultTestContext@5b390546 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@7c896573, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2063a0e5 testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Initiating transaction rollback
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Rolling back JPA transaction on EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7f30ab6]
DEBUG main org.hibernate.engine.transaction.spi.AbstractTransactionImpl - rolling back
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - rolled JDBC Connection
DEBUG main org.hibernate.engine.transaction.internal.jdbc.JdbcTransaction - re-enabling autocommit
DEBUG main org.springframework.orm.jpa.JpaTransactionManager - Closing JPA EntityManager [org.hibernate.jpa.internal.EntityManagerImpl@7f30ab6] after transaction
DEBUG main org.springframework.orm.jpa.EntityManagerFactoryUtils - Closing JPA EntityManager
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Releasing JDBC connection
DEBUG main org.hibernate.engine.jdbc.internal.LogicalConnectionImpl - Released JDBC connection
INFO main org.springframework.test.context.transaction.TransactionalTestExecutionListener - Rolled back transaction after test execution for test context [DefaultTestContext@5b390546 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@7c896573, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2063a0e5 testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GroovyContextLoader', parent = [null]]]
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test method: context [DefaultTestContext@5b390546 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@7c896573, testMethod = retrieveConference@GroovyJpaConferenceDaoImplTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2063a0e5 testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GroovyContextLoader', parent = [null]]], class dirties context [false], class mode [null], method dirties context [false].
DEBUG main com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest - ===================after class======================
DEBUG main org.springframework.test.context.support.DirtiesContextTestExecutionListener - After test class: context [DefaultTestContext@5b390546 testClass = GroovyJpaConferenceDaoImplTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2063a0e5 testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GroovyContextLoader', parent = [null]]], dirtiesContext [false].
INFO Thread-3 org.springframework.context.support.GenericApplicationContext - Closing org.springframework.context.support.GenericApplicationContext@21d377a4: startup date [Sun Dec 15 23:37:10 CST 2013]; root of context hierarchy
DEBUG Thread-3 org.springframework.beans.factory.support.DefaultListableBeanFactory - Returning cached instance of singleton bean 'lifecycleProcessor'
DEBUG Thread-3 org.springframework.beans.factory.support.DefaultListableBeanFactory - Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@9574cdc: defining beans [dataSource,entityManagerFactory,transactionManager,conferenceDao,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor,org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor]; root of factory hierarchy
DEBUG Thread-3 org.springframework.beans.factory.support.DefaultListableBeanFactory - Retrieved dependent beans for bean 'conferenceDao': [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG Thread-3 org.springframework.beans.factory.support.DisposableBeanAdapter - Invoking destroy() on bean with name 'entityManagerFactory'
INFO Thread-3 org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'persistenceUnit'
DEBUG Thread-3 org.hibernate.internal.SessionFactoryImpl - HHH000031: Closing
DEBUG Thread-3 org.hibernate.jpa.internal.EntityManagerFactoryRegistry - Remove: name=persistenceUnit
DEBUG main org.springframework.test.context.junit4.SpringJUnit4ClassRunner - SpringJUnit4ClassRunner constructor called with [class com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest].
DEBUG main org.springframework.test.context.ContextLoaderUtils - Found explicit ContextLoader class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader] for context configuration attributes [ContextConfigurationAttributes@75e4c320 declaringClass = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest', locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', inheritLocations = true, initializers = '{}', inheritInitializers = true, name = [null], contextLoaderClass = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader']
DEBUG main org.springframework.test.context.ContextLoaderUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.context.TestContextManager - @TestExecutionListeners is not present for class [class com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]: using defaults.
DEBUG main org.springframework.test.context.TestContextManager - Could not instantiate default TestExecutionListener class [org.springframework.test.context.web.ServletTestExecutionListener]. Specify custom listener classes or make the default listener classes available.
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest]
DEBUG main org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@646f5891 testClass = GroovyJpaConferenceDaoImplTest, testInstance = com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest@4a1fcb1a, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]]].
DEBUG main org.springframework.test.context.support.AbstractGenericContextLoader - Loading ApplicationContext for merged context configuration [[MergedContextConfiguration@6d4f3dfa testClass = GroovyJpaConferenceDaoImplTest, locations = '{classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy}', classes = '{}', contextInitializerClasses = '[]', activeProfiles = '{}', contextLoader = 'com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest$GenericGroovyContextLoader', parent = [null]]].
DEBUG main org.springframework.core.env.StandardEnvironment - Initializing new StandardEnvironment
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemProperties] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Adding [systemEnvironment] PropertySource with lowest search precedence
DEBUG main org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [systemProperties,systemEnvironment]
DEBUG main org.springframework.beans.factory.groovy.GroovyBeanDefinitionReader - Loaded 4 bean definitions from location pattern [classpath:/com/hantsylabs/example/spring/config/JpaConfigGroovy.groovy]
INFO main org.springframework.context.support.GenericApplicationContext - Refreshing org.springframework.context.support.GenericApplicationContext@e6da0da: startup date [Sun Dec 15 23:38:29 CST 2013]; root of context hierarchy
DEBUG main org.springframework.context.support.GenericApplicationContext - Bean factory for org.springframework.context.support.GenericApplicationContext@e6da0da: org.springframework.beans.factory.support.DefaultListableBeanFactory@3a06520: defining beans [dataSource,entityManagerFactory,transactionManager,conferenceDao,org.springframework.context.annotation.internalConfigurationAnnotationProcessor,org.springframework.context.annotation.internalAutowiredAnnotationProcessor,org.springframework.context.annotation.internalRequiredAnnotationProcessor,org.springframework.context.annotation.internalCommonAnnotationProcessor,org.springframework.context.annotation.internalPersistenceAnnotationProcessor]; root of factory hierarchy
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalConfigurationAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
INFO main org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor - JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalAutowiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalRequiredAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalCommonAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.internalPersistenceAnnotationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.importAwareProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'org.springframework.context.annotation.ConfigurationClassPostProcessor.enhancedConfigurationProcessor'
DEBUG main org.springframework.context.support.GenericApplicationContext - Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4deb9df0]
DEBUG main org.springframework.context.support.GenericApplicationContext - Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@552d7308]
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'entityManagerFactory'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'entityManagerFactory' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating shared instance of singleton bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Creating instance of bean 'dataSource'
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Eagerly caching bean 'dataSource' to allow for resolving potential circular references
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Finished creating instance of bean 'dataSource'
DEBUG main org.jboss.logging - Logging Provider: org.jboss.logging.Log4jLoggerProvider
DEBUG main org.springframework.beans.factory.support.DefaultListableBeanFactory - Invoking afterPropertiesSet() on bean with name 'entityManagerFactory'
DEBUG main org.springframework.core.io.support.PathMatchingResourcePatternResolver - Looking for matching resources in directory tree [E:\MyWorks\hantsy-labs\spring4-sandbox\groovy-dsl\target\classes\com\hantsylabs\example\spring\model]
DEBUG main org.springframework.core.io.support.PathMatchingResourcePatternResolver - Searching directory [E:\MyWorks\hantsy-labs\spring4-sandbox\groovy-dsl\target\classes\com\hantsylabs\example\spring\model] for files matching pattern [E:/MyWorks/hantsy-labs/spring4-sandbox/groovy-dsl/target/classes/com/hantsylabs/example/spring/model/**/*.class]
DEBUG main org.springframework.core.io.support.PathMatchingResourcePatternResolver - Resolved location pattern [classpath*:com/hantsylabs/example/spring/model/**/*.class] to resources [file [E:\MyWorks\hantsy-labs\spring4-sandbox\groovy-dsl\target\classes\com\hantsylabs\example\spring\model\Conference.class]]
INFO main org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean - Building JPA container EntityManagerFactory for persistence unit 'persistenceUnit'
WARN main org.hibernate.ejb.HibernatePersistence - HHH015016: Encountered a deprecated javax.persistence.spi.PersistenceProvider [org.hibernate.ejb.HibernatePersistence]; use [org.hibernate.jpa.HibernatePersistenceProvider] instead.
DEBUG main org.hibernate.jpa.internal.util.LogHelper - PersistenceUnitInfo [
	name: persistenceUnit
	persistence provider classname: null
	classloader: sun.misc.Launcher$AppClassLoader@60da5686
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: org.apache.commons.dbcp.BasicDataSource@1d634758
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/E:/MyWorks/hantsy-labs/spring4-sandbox/groovy-dsl/target/test-classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.hantsylabs.example.spring.model.Conference]
	Mapping files names []
	Properties []
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
DEBUG main org.hibernate.integrator.internal.IntegratorServiceImpl - Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
DEBUG main org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect] (replacing [org.hibernate.dialect.MySQL5Dialect])
DEBUG main org.hibernate.boot.registry.selector.internal.StrategySelectorImpl - Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect] (replacing [org.hibernate.dialect.MySQL5InnoDBDialect])
INFO main org.hibernate.Version - HHH000412: Hibernate Core {4.3.0.CR2}
INFO main org.hibernate.cfg.Environment - HHH000206: hibernate.properties not found
INFO main org.hibernate.cfg.Environment - HHH000021: Bytecode provider name : javassist
DEBUG main org.hibernate.service.spi.ServiceBinding - Overriding existing service binding [org.hibernate.secure.spi.JaccService]
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23c030bc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration boolean -> org.hibernate.type.BooleanType@23c030bc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@23c030bc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3a8905fd
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration true_false -> org.hibernate.type.TrueFalseType@131dfe52
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration yes_no -> org.hibernate.type.YesNoType@6c1c19c6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2e4ce3f8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte -> org.hibernate.type.ByteType@2e4ce3f8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@2e4ce3f8
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration character -> org.hibernate.type.CharacterType@475d8af
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char -> org.hibernate.type.CharacterType@475d8af
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@475d8af
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@665c572
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration short -> org.hibernate.type.ShortType@665c572
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Short -> org.hibernate.type.ShortType@665c572
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration integer -> org.hibernate.type.IntegerType@4dbd0427
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration int -> org.hibernate.type.IntegerType@4dbd0427
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4dbd0427
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@26a80a7b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration long -> org.hibernate.type.LongType@26a80a7b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Long -> org.hibernate.type.LongType@26a80a7b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@417e7d7d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration float -> org.hibernate.type.FloatType@417e7d7d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Float -> org.hibernate.type.FloatType@417e7d7d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@114379f5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration double -> org.hibernate.type.DoubleType@114379f5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@114379f5
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1cf7bba1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1cf7bba1
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration big_integer -> org.hibernate.type.BigIntegerType@5cc6d24
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@5cc6d24
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration string -> org.hibernate.type.StringType@1905d7cc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.String -> org.hibernate.type.StringType@1905d7cc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nstring -> org.hibernate.type.StringNVarcharType@a456424
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@19195b2e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration url -> org.hibernate.type.UrlType@5c4f32bb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.net.URL -> org.hibernate.type.UrlType@5c4f32bb
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration date -> org.hibernate.type.DateType@1ded8ee6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Date -> org.hibernate.type.DateType@1ded8ee6
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration time -> org.hibernate.type.TimeType@65719a42
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Time -> org.hibernate.type.TimeType@65719a42
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timestamp -> org.hibernate.type.TimestampType@2c8cea2e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2c8cea2e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2c8cea2e
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@13cd159
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar -> org.hibernate.type.CalendarType@63808bcc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@63808bcc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@63808bcc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@16837c0b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration locale -> org.hibernate.type.LocaleType@57a3ec8d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@57a3ec8d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration currency -> org.hibernate.type.CurrencyType@4aff80f4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@4aff80f4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration timezone -> org.hibernate.type.TimeZoneType@62423e2f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@62423e2f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration class -> org.hibernate.type.ClassType@486a8d1c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Class -> org.hibernate.type.ClassType@486a8d1c
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@1fc8504d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@1fc8504d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@4e8e3c06
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration pg-uuid -> org.hibernate.type.PostgresUUIDType@17627b7
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration binary -> org.hibernate.type.BinaryType@f2a1355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration byte[] -> org.hibernate.type.BinaryType@f2a1355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [B -> org.hibernate.type.BinaryType@f2a1355
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@3b86a79a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@3b86a79a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@3b86a79a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration image -> org.hibernate.type.ImageType@2e6a47aa
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration characters -> org.hibernate.type.CharArrayType@1cf4651f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration char[] -> org.hibernate.type.CharArrayType@1cf4651f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [C -> org.hibernate.type.CharArrayType@1cf4651f
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@4a3eee8d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@4a3eee8d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@4a3eee8d
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration text -> org.hibernate.type.TextType@73619950
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration ntext -> org.hibernate.type.NTextType@dd8f286
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration blob -> org.hibernate.type.BlobType@26d4f204
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@26d4f204
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6897f7ca
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration clob -> org.hibernate.type.ClobType@486de08b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@486de08b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration nclob -> org.hibernate.type.NClobType@4f2f2008
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@4f2f2008
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@518bc6a4
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@14d0093a
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration serializable -> org.hibernate.type.SerializableType@5a04648b
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration object -> org.hibernate.type.ObjectType@56816335
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@56816335
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@c46cddc
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7c752ccf
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@70d109de
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2bdf07af
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3f7188a9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@36c32fc9
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@48765135
DEBUG main org.hibernate.type.BasicTypeRegistry - Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@4fcd93bd
INFO main org.hibernate.annotations.common.Version - HCANN000001: Hibernate Commons Annotations {4.0.4.Final}
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [hilo] -> [org.hibernate.id.TableHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.SequenceGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
DEBUG main org.hibernate.cfg.Configuration - Preparing to build session factory with filters : {}
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Database ->
       name : H2
    version : 1.3.171 (2013-03-17)
      major : 1
      minor : 3
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - Driver ->
       name : H2 JDBC Driver
    version : 1.3.171 (2013-03-17)
      major : 1
      minor : 3
DEBUG main org.hibernate.engine.jdbc.internal.JdbcServicesImpl - JDBC version : 4.0
INFO main org.hibernate.dialect.Dialect - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
DEBUG main org.hibernate.cfg.Configuration - Processing hbm.xml files
DEBUG main org.hibernate.cfg.Configuration - Process annotated classes
DEBUG main org.hibernate.cfg.AnnotationBinder - Binding entity from annotated class: com.hantsylabs.example.spring.model.Conference
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Import with entity name Conference
DEBUG main org.hibernate.cfg.annotations.EntityBinder - Bind entity com.hantsylabs.example.spring.model.Conference on table Conference
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=id, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property id with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hantsylabs.example.spring.model.Conference:id]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for id
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property id
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=description, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property description with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hantsylabs.example.spring.model.Conference:description]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for description
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property description
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=ended_date, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property endedDate with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hantsylabs.example.spring.model.Conference:endedDate]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for endedDate
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property endedDate
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=name, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property name with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hantsylabs.example.spring.model.Conference:name]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for name
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property name
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=slug, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property slug with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hantsylabs.example.spring.model.Conference:slug]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for slug
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property slug
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=started_date, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property startedDate with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hantsylabs.example.spring.model.Conference:startedDate]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for startedDate
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property startedDate
DEBUG main org.hibernate.cfg.Ejb3Column - Binding column: Ejb3Column{table=org.hibernate.mapping.Table(Conference), mappingColumn=version, insertable=true, updatable=true, unique=false}
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - MetadataSourceProcessor property version with lazy=false
DEBUG main org.hibernate.cfg.AbstractPropertyHolder - Attempting to locate auto-apply AttributeConverter for property [com.hantsylabs.example.spring.model.Conference:version]
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - building SimpleValue for version
DEBUG main org.hibernate.cfg.annotations.PropertyBinder - Building property version
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for id
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for description
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for endedDate
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for name
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for slug
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for startedDate
DEBUG main org.hibernate.cfg.annotations.SimpleValueBinder - Starting fillSimpleValue for version
DEBUG main org.hibernate.cfg.Configuration - Processing fk mappings (*ToOne and JoinedSubclass)
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing extends queue
DEBUG main org.hibernate.cfg.Configuration - Processing collection mappings
DEBUG main org.hibernate.cfg.Configuration - Processing native query and ResultSetMapping mappings
DEBUG main org.hibernate.cfg.Configuration - Processing association property references
DEBUG main org.hibernate.cfg.Configuration - Creating tables' unique integer identifiers
DEBUG main org.hibernate.cfg.Configuration - Processing foreign key constraints
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator - No JtaPlatform was specified, checking resolver
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformResolverInitiator - No JtaPlatformResolver was specified, using default [org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver]
DEBUG main org.hibernate.engine.transaction.jta.platform.internal.StandardJtaPlatformResolver - Could not resolve JtaPlatform, using default [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic flush during beforeCompletion(): disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic session close at end of transaction: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch size: 15
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC batch updates for versioned data: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Scrollable result sets: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Wrap result sets: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JDBC3 getGeneratedKeys(): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - multi-tenancy strategy : NONE
DEBUG main org.hibernate.cfg.SettingsFactory - Connection release mode: auto
DEBUG main org.hibernate.cfg.SettingsFactory - Using BatchFetchStyle : LEGACY
DEBUG main org.hibernate.cfg.SettingsFactory - Default batch fetch size: 1
DEBUG main org.hibernate.cfg.SettingsFactory - Generate SQL with comments: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL updates by primary key: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Order SQL inserts for batching: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default null ordering: none
DEBUG main org.hibernate.cfg.SettingsFactory - Query translator: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory
INFO main org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory - HHH000397: Using ASTQueryTranslatorFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Query language substitutions: {}
DEBUG main org.hibernate.cfg.SettingsFactory - JPA-QL strict compliance: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache: enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Query cache: disabled
DEBUG main org.hibernate.cache.internal.RegionFactoryInitiator - Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
DEBUG main org.hibernate.cfg.SettingsFactory - Optimize cache for minimal puts: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Structured second-level cache entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Second-level cache direct-reference entries: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Automatic eviction of collection cache: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Statistics: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Deleted entity synthetic identifier rollback: disabled
DEBUG main org.hibernate.cfg.SettingsFactory - Default entity-mode: pojo
DEBUG main org.hibernate.cfg.SettingsFactory - Named query checking : enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Check Nullability in Core (should be disabled when Bean Validation is on): enabled
DEBUG main org.hibernate.cfg.SettingsFactory - Allow initialization of lazy state outside session : : disabled
DEBUG main org.hibernate.cfg.SettingsFactory - JTA Track by Thread: enabled
DEBUG main org.hibernate.internal.SessionFactoryImpl - Building session factory
DEBUG main org.hibernate.internal.SessionFactoryImpl - Session factory constructed with filter configurations : {}
DEBUG main org.hibernate.internal.SessionFactoryImpl - Instantiating session factory with properties: {java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=D:\jdk7\jre\bin, java.vm.version=24.45-b08, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, path.separator=;, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, user.script=, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=Service Pack 1, java.vm.specification.name=Java Virtual Machine Specification, user.dir=E:\MyWorks\hantsy-labs\spring4-sandbox\groovy-dsl, javax.persistence.sharedCache.mode=UNSPECIFIED, java.runtime.version=1.7.0_45-b18, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, java.endorsed.dirs=D:\jdk7\jre\lib\endorsed, os.arch=amd64, java.io.tmpdir=E:\Users\hantsy\AppData\Local\Temp\, line.separator=
, java.vm.specification.vendor=Oracle Corporation, user.variant=, os.name=Windows 7, sun.jnu.encoding=Cp1252, java.library.path=D:\jdk7\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;D:\Python33\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Common Files\Acronis\SnapAPI\;D:\wamp\bin\php\php5.4.12;C:\ProgramData\Composer\bin;D:\Program Files (x86)\MySQL\MySQL Utilities\;C:\Program Files (x86)\Git\cmd;C:\Program Files (x86)\Git\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files\StrongLoop Suite\;C:\Program Files (x86)\Calibre2\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseHg\;D:\Python33\;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\Common Files\Acronis\SnapAPI\;D:\wamp\bin\php\php5.4.12;C:\ProgramData\Composer\bin;D:\Program Files (x86)\MySQL\MySQL Utilities\;C:\Program Files (x86)\Git\cmd;C:\Program Files (x86)\Git\bin;C:\Program Files\TortoiseGit\bin;C:\Program Files\StrongLoop Suite\;C:\Program Files (x86)\Calibre2\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\TortoiseHg\;D:\Ruby200-x64\bin;D:\build\maven\bin;D:\jdk7\bin;D:\build\ant\bin;D:\build\gradle\bin;D:\forge\bin;D:\scala\bin;D:\roo\bin;D:\build\sbt;D:\play;D:\grails\bin;D:\groovy\bin;D:\build\maven\bin;D:\jdk7\bin;D:\build\ant\bin;D:\build\gradle\bin;D:\forge\bin;D:\scala\bin;D:\roo\bin;D:\build\sbt;D:\play;D:\grails\bin;D:\groovy\bin;E:\Users\hantsy\AppData\Local\.meteor;D:\android-sdk\platform-tools;D:\android-sdk\tools;E:\Users\hantsy\AppData\Roaming\npm;D:\go\bin;;., hibernate.ejb.persistenceUnitName=persistenceUnit, java.specification.name=Java Platform API Specification, java.class.version=51.0, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, os.version=6.1, user.home=E:\Users\hantsy, user.timezone=Asia/Shanghai, java.awt.printerjob=sun.awt.windows.WPrinterJob, java.specification.version=1.7, file.encoding=UTF-8, javax.persistence.nonJtaDataSource=org.apache.commons.dbcp.BasicDataSource@1d634758, hibernate.format_sql=true, user.name=hantsy, java.class.path=E:\MyWorks\hantsy-labs\spring4-sandbox\groovy-dsl\target\test-classes;E:\MyWorks\hantsy-labs\spring4-sandbox\groovy-dsl\target\classes;E:\Users\hantsy\.groovy\greclipse\global_dsld_support;D:\devtools\springsource\sts-3.4.0.RELEASE\plugins\org.codehaus.groovy_2.1.6.xx-20130828-1400-e43-RELEASE\plugin_dsld_support\;E:\Users\hantsy\.m2\repository\org\springframework\spring-test\4.0.0.RELEASE\spring-test-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\junit\junit\4.10\junit-4.10.jar;E:\Users\hantsy\.m2\repository\org\hamcrest\hamcrest-core\1.1\hamcrest-core-1.1.jar;E:\Users\hantsy\.m2\repository\log4j\log4j\1.2.17\log4j-1.2.17.jar;E:\Users\hantsy\.m2\repository\org\slf4j\slf4j-api\1.7.2\slf4j-api-1.7.2.jar;E:\Users\hantsy\.m2\repository\org\slf4j\jcl-over-slf4j\1.7.2\jcl-over-slf4j-1.7.2.jar;E:\Users\hantsy\.m2\repository\org\slf4j\slf4j-log4j12\1.7.2\slf4j-log4j12-1.7.2.jar;E:\Users\hantsy\.m2\repository\org\aspectj\aspectjrt\1.7.2\aspectjrt-1.7.2.jar;E:\Users\hantsy\.m2\repository\org\aspectj\aspectjweaver\1.7.2\aspectjweaver-1.7.2.jar;E:\Users\hantsy\.m2\repository\org\apache\commons\commons-lang3\3.1\commons-lang3-3.1.jar;E:\Users\hantsy\.m2\repository\commons-dbcp\commons-dbcp\1.4\commons-dbcp-1.4.jar;E:\Users\hantsy\.m2\repository\commons-pool\commons-pool\1.5.4\commons-pool-1.5.4.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-core\4.0.0.RELEASE\spring-core-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\commons-logging\commons-logging\1.1.1\commons-logging-1.1.1.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-jdbc\4.0.0.RELEASE\spring-jdbc-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-tx\4.0.0.RELEASE\spring-tx-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-orm\4.0.0.RELEASE\spring-orm-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\aopalliance\aopalliance\1.0\aopalliance-1.0.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-context\4.0.0.RELEASE\spring-context-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-expression\4.0.0.RELEASE\spring-expression-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-beans\4.0.0.RELEASE\spring-beans-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-context-support\4.0.0.RELEASE\spring-context-support-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-aop\4.0.0.RELEASE\spring-aop-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\org\springframework\spring-aspects\4.0.0.RELEASE\spring-aspects-4.0.0.RELEASE.jar;E:\Users\hantsy\.m2\repository\com\h2database\h2\1.3.171\h2-1.3.171.jar;E:\Users\hantsy\.m2\repository\org\hibernate\hibernate-core\4.3.0.CR2\hibernate-core-4.3.0.CR2.jar;E:\Users\hantsy\.m2\repository\org\jboss\logging\jboss-logging\3.1.3.GA\jboss-logging-3.1.3.GA.jar;E:\Users\hantsy\.m2\repository\org\jboss\logging\jboss-logging-annotations\1.2.0.Beta1\jboss-logging-annotations-1.2.0.Beta1.jar;E:\Users\hantsy\.m2\repository\org\jboss\spec\javax\transaction\jboss-transaction-api_1.2_spec\1.0.0.Final\jboss-transaction-api_1.2_spec-1.0.0.Final.jar;E:\Users\hantsy\.m2\repository\dom4j\dom4j\1.6.1\dom4j-1.6.1.jar;E:\Users\hantsy\.m2\repository\xml-apis\xml-apis\1.0.b2\xml-apis-1.0.b2.jar;E:\Users\hantsy\.m2\repository\org\hibernate\common\hibernate-commons-annotations\4.0.4.Final\hibernate-commons-annotations-4.0.4.Final.jar;E:\Users\hantsy\.m2\repository\org\javassist\javassist\3.18.1-GA\javassist-3.18.1-GA.jar;E:\Users\hantsy\.m2\repository\antlr\antlr\2.7.7\antlr-2.7.7.jar;E:\Users\hantsy\.m2\repository\org\jboss\jandex\1.1.0.Final\jandex-1.1.0.Final.jar;E:\Users\hantsy\.m2\repository\org\hibernate\hibernate-entitymanager\4.3.0.CR2\hibernate-entitymanager-4.3.0.CR2.jar;E:\Users\hantsy\.m2\repository\org\hibernate\javax\persistence\hibernate-jpa-2.1-api\1.0.0.Final\hibernate-jpa-2.1-api-1.0.0.Final.jar;E:\Users\hantsy\.m2\repository\org\hibernate\hibernate-validator\5.0.1.Final\hibernate-validator-5.0.1.Final.jar;E:\Users\hantsy\.m2\repository\com\fasterxml\classmate\0.8.0\classmate-0.8.0.jar;E:\Users\hantsy\.m2\repository\javax\validation\validation-api\1.1.0.Final\validation-api-1.1.0.Final.jar;E:\Users\hantsy\.m2\repository\javax\transaction\javax.transaction-api\1.2\javax.transaction-api-1.2.jar;E:\Users\hantsy\.m2\repository\javax\inject\javax.inject\1\javax.inject-1.jar;E:\Users\hantsy\.m2\repository\javax\annotation\jsr250-api\1.0\jsr250-api-1.0.jar;E:\Users\hantsy\.m2\repository\org\codehaus\groovy\groovy-all\2.1.8\groovy-all-2.1.8.jar;/D:/devtools/springsource/sts-3.4.0.RELEASE/configuration/org.eclipse.osgi/bundles/404/1/.cp/;/D:/devtools/springsource/sts-3.4.0.RELEASE/configuration/org.eclipse.osgi/bundles/403/1/.cp/, hibernate.bytecode.use_reflection_optimizer=false, hibernate.show_sql=true, javax.persistence.validation.mode=AUTO, java.vm.specification.version=1.7, sun.arch.data.model=64, java.home=D:\jdk7\jre, sun.java.command=org.eclipse.jdt.internal.junit.runner.RemoteTestRunner -version 3 -port 53351 -testLoaderClass org.eclipse.jdt.internal.junit4.runner.JUnit4TestLoader -loaderpluginname org.eclipse.jdt.junit4.runtime -classNames com.hantsylabs.example.spring.dao.GroovyJpaConferenceDaoImplTest, java.specification.vendor=Oracle Corporation, user.language=en, awt.toolkit=sun.awt.windows.WToolkit, java.vm.info=mixed mode, java.version=1.7.0_45, java.ext.dirs=D:\jdk7\jre\lib\ext;C:\Windows\Sun\Java\lib\ext, sun.boot.class.path=D:\jdk7\jre\lib\resources.jar;D:\jdk7\jre\lib\rt.jar;D:\jdk7\jre\lib\sunrsasign.jar;D:\jdk7\jre\lib\jsse.jar;D:\jdk7\jre\lib\jce.jar;D:\jdk7\jre\lib\charsets.jar;D:\jdk7\jre\lib\jfr.jar;D:\jdk7\jre\classes, java.vendor=Oracle Corporation, file.separator=\, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, hibernate.hbm2ddl.auto=create, sun.cpu.endian=little, sun.io.unicode.encoding=UnicodeLittle, sun.desktop=windows, sun.cpu.isalist=amd64}
INFO main org.hibernate.validator.internal.util.Version - HV000001: Hibernate Validator 5.0.1.Final
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
DEBUG main org.hibernate.validator.internal.engine.resolver.DefaultTraversableResolver - Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
DEBUG main org.hibernate.validator.internal.xml.ValidationXmlParser - Trying to load META-INF/validation.xml for XML based Validator configuration.
DEBUG main org.hibernate.validator.internal.xml.ValidationXmlParser - No META-INF/validation.xml found. Using annotation based configuration only.
DEBUG main org.hibernate.secure.spi.JaccIntegrator - Skipping JACC integration as it was not enabled
DEBUG main org.hibernate.engine.spi.CascadeStyles - External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
DEBUG main org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory - Setting dialect [org.hibernate.dialect.H2Dialect]
DEBUG main org.hibernate.persister.entity.AbstractEntityPersister - Static SQL for entity: com.hantsylabs.example.spring.model.Conference
