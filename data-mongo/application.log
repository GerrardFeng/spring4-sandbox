DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================before class=========================
DEBUG main org.springframework.data.repository.config.RepositoryComponentProvider - Identified candidate component class: file [E:\MyWorks\hantsy-labs\spring4-sandbox\data-mongo\target\classes\com\hantsylabs\example\spring\mongo\ConferenceRepository.class]
DEBUG main org.springframework.data.repository.config.RepositoryComponentProvider - Identified candidate component class: file [E:\MyWorks\hantsy-labs\spring4-sandbox\data-mongo\target\classes\com\hantsylabs\example\spring\mongo\SignupRepository.class]
DEBUG main org.springframework.data.repository.config.RepositoryBeanDefinitionBuilder - Registering custom repository implementation: conferenceRepositoryImpl com.hantsylabs.example.spring.mongo.ConferenceRepositoryImpl
DEBUG main org.springframework.data.repository.config.RepositoryConfigurationDelegate - Registering repository: conferenceRepository - Interface: com.hantsylabs.example.spring.mongo.ConferenceRepository - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
DEBUG main org.springframework.data.repository.config.RepositoryConfigurationDelegate - Registering repository: signupRepository - Interface: com.hantsylabs.example.spring.mongo.SignupRepository - Factory: org.springframework.data.mongodb.repository.support.MongoRepositoryFactoryBean
DEBUG main org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator - Analyzing class class com.hantsylabs.example.spring.model.Address for index information.
DEBUG main org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator - Analyzing class class com.hantsylabs.example.spring.model.Conference for index information.
DEBUG main org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator - Analyzing class class com.hantsylabs.example.spring.model.Signup for index information.
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================before test case=========================
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:05 CST 2014,endedDate=Fri Aug 08 21:36:05 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@14fc5f04]
INFO main org.springframework.data.mongodb.core.mapping.event.LoggingEventListener - onBeforeConvert: Conference[id=<null>,version=0,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:05 CST 2014,endedDate=Fri Aug 08 21:36:05 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@14fc5f04]
INFO main org.springframework.data.mongodb.core.mapping.event.LoggingEventListener - onBeforeSave: Conference[id=<null>,version=0,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:05 CST 2014,endedDate=Fri Aug 08 21:36:05 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@14fc5f04], { "_class" : "com.hantsylabs.example.spring.model.Conference" , "_id" :  null  , "version" : 0 , "name" : "JUD2013" , "description" : "JBoss User Developer Conference 2013 Boston" , "startedDate" : { "$date" : "2014-08-01T13:36:05.989Z"} , "endedDate" : { "$date" : "2014-08-08T13:36:05.989Z"} , "slug" : "jud-2013" , "address" : { "addressLine1" : "address line 1" , "addressLine2" : "address line 2" , "zipCode" : "510000" , "city" : "NY" , "country" : "CN"}}
DEBUG main org.springframework.data.mongodb.core.MongoTemplate - Inserting DBObject containing fields: [_class, _id, version, name, description, startedDate, endedDate, slug, address] in collection: conference
DEBUG main org.springframework.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[conference-db]
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================after test case=========================
DEBUG main org.springframework.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[conference-db]
DEBUG main org.springframework.data.mongodb.core.MongoTemplate - Remove using query: { } in collection: signup.
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================before test case=========================
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:11 CST 2014,endedDate=Fri Aug 08 21:36:11 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@35b74c5c]
INFO main org.springframework.data.mongodb.core.mapping.event.LoggingEventListener - onBeforeConvert: Conference[id=<null>,version=0,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:11 CST 2014,endedDate=Fri Aug 08 21:36:11 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@35b74c5c]
INFO main org.springframework.data.mongodb.core.mapping.event.LoggingEventListener - onBeforeSave: Conference[id=<null>,version=0,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:11 CST 2014,endedDate=Fri Aug 08 21:36:11 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@35b74c5c], { "_class" : "com.hantsylabs.example.spring.model.Conference" , "_id" :  null  , "version" : 0 , "name" : "JUD2013" , "description" : "JBoss User Developer Conference 2013 Boston" , "startedDate" : { "$date" : "2014-08-01T13:36:11.356Z"} , "endedDate" : { "$date" : "2014-08-08T13:36:11.356Z"} , "slug" : "jud-2013" , "address" : { "addressLine1" : "address line 1" , "addressLine2" : "address line 2" , "zipCode" : "510000" , "city" : "NY" , "country" : "CN"}}
DEBUG main org.springframework.data.mongodb.core.MongoTemplate - Inserting DBObject containing fields: [_class, _id, version, name, description, startedDate, endedDate, slug, address] in collection: conference
DEBUG main org.springframework.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[conference-db]
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================after test case=========================
DEBUG main org.springframework.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[conference-db]
DEBUG main org.springframework.data.mongodb.core.MongoTemplate - Remove using query: { } in collection: signup.
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================before test case=========================
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:16 CST 2014,endedDate=Fri Aug 08 21:36:16 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@1ebea008]
INFO main org.springframework.data.mongodb.core.mapping.event.LoggingEventListener - onBeforeConvert: Conference[id=<null>,version=0,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:16 CST 2014,endedDate=Fri Aug 08 21:36:16 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@1ebea008]
INFO main org.springframework.data.mongodb.core.mapping.event.LoggingEventListener - onBeforeSave: Conference[id=<null>,version=0,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:16 CST 2014,endedDate=Fri Aug 08 21:36:16 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@1ebea008], { "_class" : "com.hantsylabs.example.spring.model.Conference" , "_id" :  null  , "version" : 0 , "name" : "JUD2013" , "description" : "JBoss User Developer Conference 2013 Boston" , "startedDate" : { "$date" : "2014-08-01T13:36:16.428Z"} , "endedDate" : { "$date" : "2014-08-08T13:36:16.428Z"} , "slug" : "jud-2013" , "address" : { "addressLine1" : "address line 1" , "addressLine2" : "address line 2" , "zipCode" : "510000" , "city" : "NY" , "country" : "CN"}}
DEBUG main org.springframework.data.mongodb.core.MongoTemplate - Inserting DBObject containing fields: [_class, _id, version, name, description, startedDate, endedDate, slug, address] in collection: conference
DEBUG main org.springframework.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[conference-db]
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================after test case=========================
DEBUG main org.springframework.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[conference-db]
DEBUG main org.springframework.data.mongodb.core.MongoTemplate - Remove using query: { } in collection: signup.
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================before test case=========================
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - new conference object:Conference[id=<null>,version=<null>,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:21 CST 2014,endedDate=Fri Aug 08 21:36:21 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@6ca18a14]
INFO main org.springframework.data.mongodb.core.mapping.event.LoggingEventListener - onBeforeConvert: Conference[id=<null>,version=0,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:21 CST 2014,endedDate=Fri Aug 08 21:36:21 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@6ca18a14]
INFO main org.springframework.data.mongodb.core.mapping.event.LoggingEventListener - onBeforeSave: Conference[id=<null>,version=0,name=JUD2013,description=JBoss User Developer Conference 2013 Boston,startedDate=Fri Aug 01 21:36:21 CST 2014,endedDate=Fri Aug 08 21:36:21 CST 2014,slug=jud-2013,address=com.hantsylabs.example.spring.model.Address@6ca18a14], { "_class" : "com.hantsylabs.example.spring.model.Conference" , "_id" :  null  , "version" : 0 , "name" : "JUD2013" , "description" : "JBoss User Developer Conference 2013 Boston" , "startedDate" : { "$date" : "2014-08-01T13:36:21.482Z"} , "endedDate" : { "$date" : "2014-08-08T13:36:21.482Z"} , "slug" : "jud-2013" , "address" : { "addressLine1" : "address line 1" , "addressLine2" : "address line 2" , "zipCode" : "510000" , "city" : "NY" , "country" : "CN"}}
DEBUG main org.springframework.data.mongodb.core.MongoTemplate - Inserting DBObject containing fields: [_class, _id, version, name, description, startedDate, endedDate, slug, address] in collection: conference
DEBUG main org.springframework.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[conference-db]
DEBUG main com.hantsylabs.example.spring.dao.ConferencRepositoryImplTest - ==================after test case=========================
DEBUG main org.springframework.data.mongodb.core.MongoDbUtils - Getting Mongo Database name=[conference-db]
DEBUG main org.springframework.data.mongodb.core.MongoTemplate - Remove using query: { } in collection: signup.
